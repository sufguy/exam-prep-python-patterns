import streamlit as st
import reveal_slides as rs

# --- Handler classes ---
class Handler:
    def __init__(self, successor=None):
        self.successor = successor

    def handle(self, request):
        if self.successor:
            return self.successor.handle(request)
        else:
            return f"üö´ –ù–∏–∫—Ç–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª: {request}"

class AdminHandler(Handler):
    def handle(self, request):
        if request.lower() == "admin":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: admin"
        return super().handle(request)

class UserHandler(Handler):
    def handle(self, request):
        if request.lower() == "user":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: user"
        return super().handle(request)

class GuestHandler(Handler):
    def handle(self, request):
        if request.lower() == "guest":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: guest"
        return super().handle(request)

# --- Show slides + interactive demo ---
def show():
    slide_md = """
    ## Chain of Responsibility
    –¶–µ–ø–æ—á–∫–∞ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π ‚Äî –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –ö–∞–∂–¥—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—à–∞–µ—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ª–∏ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–ª—å—à–µ.
    ---
    ## –ü—Ä–æ–±–ª–µ–º–∞
    –ö–æ–≥–¥–∞ –≤ –∫–æ–¥–µ –º–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏–π –≤–∏–¥–∞:
    ```python
    if type == "admin":
        handle_admin()
    elif type == "user":
        handle_user()
    elif type == "guest":
        handle_guest()
    ```
    –≠—Ç–æ:
    - –ñ—ë—Å—Ç–∫–æ —Å–≤—è–∑—ã–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏
    - –ü–ª–æ—Ö–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è
    - –£—Å–ª–æ–∂–Ω—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É
    ---
    ## –ò–¥–µ—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞
    –°–æ–∑–¥–∞—Ç—å "—Ü–µ–ø–æ—á–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤", –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥—ã–π –∑–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ —Å–ª–µ–¥—É—é—â–µ–º –∑–≤–µ–Ω–µ. –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –æ—Ç –æ–¥–Ω–æ–≥–æ –∫ –¥—Ä—É–≥–æ–º—É, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –µ–≥–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç.
    ---
    ## –£—á–∞—Å—Ç–Ω–∏–∫–∏
    - **Handler** ‚Äî –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –º–µ—Ç–æ–¥–æ–º `handle(request)`
    - **ConcreteHandler** ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    - **Client** ‚Äî —Å–æ–∑–¥–∞—ë—Ç —Ü–µ–ø–æ—á–∫—É –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–ø—Ä–æ—Å –ø–µ—Ä–≤–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
    ---
    ## –†–µ–∞–ª–∏–∑–∞—Ü–∏—è: –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    ```python
    class Handler:
        def __init__(self, successor=None):
            self.successor = successor

        def handle(self, request):
            if self.successor:
                return self.successor.handle(request)
            else:
                return f"–ù–∏–∫—Ç–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª: {request}"
    ```
    ---
    ## –†–µ–∞–ª–∏–∑–∞—Ü–∏—è: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    ```python
    class AdminHandler(Handler):
        def handle(self, request):
            if request == "admin":
                return "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: admin"
            return super().handle(request)

    class UserHandler(Handler):
        def handle(self, request):
            if request == "user":
                return "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: user"
            return super().handle(request)
    ```
    ---
    ## –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    ```python
    h3 = Handler()
    h2 = UserHandler(successor=h3)
    h1 = AdminHandler(successor=h2)

    print(h1.handle("user"))
    print(h1.handle("guest"))
    ```
    ---
    ## –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
    - Middleware –≤ –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞—Ö (Flask, Django)
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ UI (–Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫, –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º—ã—à–∏)
    - –õ–æ–≥–≥–µ—Ä—ã (—É—Ä–æ–≤–µ–Ω—å DEBUG ‚Üí INFO ‚Üí WARNING ‚Üí ERROR)
    ---
    ## –ü–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã
    **–ü–ª—é—Å—ã:**
    - –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
    - –ì–∏–±–∫–æ—Å—Ç—å: –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –º–µ–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    - –õ—ë–≥–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

    **–ú–∏–Ω—É—Å—ã:**
    - –ù–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω
    - –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–¥–∏—Ç—å, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–ª—Å—è
    ---
    ## –í—ã–≤–æ–¥
    Chain of Responsibility –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –≥–∏–±–∫—É—é –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω —Ç–∞–º, –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –±–µ–∑ –∂—ë—Å—Ç–∫–æ–π –ø—Ä–∏–≤—è–∑–∫–∏.
    """

    state = rs.slides(
        slide_md,
        height=600,
        theme="black",
        config={"plugins": ["highlight", "notes", "zoom"]},
        markdown_props={"data-separator-vertical": "^--$"}
    )

    # --- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–∏–º–µ—Ä ---
    st.divider()
    st.subheader("üîß –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –ø–µ—Ä–µ–¥–∞—á–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ —Ü–µ–ø–æ—á–∫–µ")

    st.markdown("""
    ### üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    1. –í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `admin`, `user`, `guest` –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π.
    2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Äî –∑–∞–ø—Ä–æ—Å –ø–æ–π–¥—ë—Ç –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    3. –í—ã —É–≤–∏–¥–∏—Ç–µ, **–∫—Ç–æ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤** –æ–±—Ä–∞–±–æ—Ç–∞–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å, –∏–ª–∏ —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥.

    **–ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?**  
    –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ü–µ–ø–æ—á–∫–∞: –µ—Å–ª–∏ –æ–¥–∏–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –º–æ–∂–µ—Ç ‚Äî –æ–Ω –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ.
    """)

    with st.form("chain_form"):
        user_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ (admin / user / guest / –¥—Ä—É–≥–æ–µ)", value="user")
        submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ —Ü–µ–ø–æ—á–∫—É")

    if submitted:
        chain = AdminHandler(UserHandler(GuestHandler()))
        result = chain.handle(user_input)
        st.success("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
        st.code(result)

    # --- –ü–æ–∫–∞–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–∏–º–µ—Ä–∞ ---
    st.divider()
    st.markdown("### üíª –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–º–µ—Ä–∞:")
    st.code('''
class Handler:
    def __init__(self, successor=None):
        self.successor = successor

    def handle(self, request):
        if self.successor:
            return self.successor.handle(request)
        else:
            return f"üö´ –ù–∏–∫—Ç–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª: {request}"

class AdminHandler(Handler):
    def handle(self, request):
        if request.lower() == "admin":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: admin"
        return super().handle(request)

class UserHandler(Handler):
    def handle(self, request):
        if request.lower() == "user":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: user"
        return super().handle(request)

class GuestHandler(Handler):
    def handle(self, request):
        if request.lower() == "guest":
            return "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: guest"
        return super().handle(request)

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
chain = AdminHandler(UserHandler(GuestHandler()))
print(chain.handle("user"))
''', language="python")

    # --- –¢–µ–∫—É—â–∏–π —Å–ª–∞–π–¥ –∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç ---
    indexf = state.get("indexf", 0)
    st.markdown(f"–°–ª–∞–π–¥ {state['indexh']}, —Ñ—Ä–∞–≥–º–µ–Ω—Ç {indexf}")
